import numpy as np
scores = np.array([[20, 40, 56, 80, 0, 5, 25, 27, 74, 1],
         [0, 98, 67, 100, 8, 56, 34, 82, 100, 7],
         [78, 54, 23, 79, 100, 0, 0, 42, 95, 83],
         [51, 50, 47, 23, 100, 94, 25, 48, 38, 77],
         [90, 87, 41, 89, 52, 0, 5, 17, 28, 99],
         [32, 18, 21, 18, 29, 31, 48, 62, 76, 22],
         [6, 0, 65, 78, 43, 22, 38, 88, 94, 100],
         [77, 28, 39, 41, 0, 81, 45, 54, 98, 12],
         [66, 0, 88, 0, 44, 0, 55, 100, 12, 11],
         [17, 70, 86, 96, 56, 23, 32, 49, 70, 80],
         [20, 24, 76, 50, 29, 40, 3, 2, 5, 11],
         [33, 63, 28, 40, 51, 100, 98, 87, 22, 30],
         [16, 54, 78, 12, 25, 35, 10, 19, 67, 0],
         [100, 88, 24, 33, 47, 56, 62, 34, 77, 53],
         [50, 89, 70, 72, 56, 29, 15, 20, 0, 0]])


def standart():
    count = 0
    for row in scores:
        for x in row:
            count += 50 < x < 70
    print(count)

print('1. Посчитать, сколько слушателей получили 0 за вступительный экзамен')
print(np.count_nonzero(scores == 0))

print('2. Посчитать, сколько слушателей получили балл выше 50')
print(np.count_nonzero(scores > 50))

print('3. Посчитать, сколько человек получили балл не ниже 50, но не выше 70.')
print(np.count_nonzero((50 < scores) & (scores < 70)))  

print('4. Определить, в какой группе средний балл за вступительный экзамен выше.')
row_means = np.mean(scores, axis=1)
max_mean_index = np.argmax(row_means)
print(f'Index: {max_mean_index}, avg: {row_means[max_mean_index]}')

print('5. Сохранить баллы слушателей выше 0 в массив `nonzero`')
non_zero_scores = scores[scores > 0]
print(non_zero_scores)

print('Используя массив `nonzero`, определить минимальный балл за вступительный балл среди всех групп.')
print(np.min(non_zero_scores))

print('Выбрать из массива `nonzero` только те значения, которые соответствуют продвинутому уровню знания языка – баллу за экзамен выше 80. Сохранить полученный результат в массив `advanced`. ')
advanced = non_zero_scores[non_zero_scores > 80]
print(advanced)

print('Получить из исходного массива `scores` массив медианных оценок по группам.')
medians = np.median(scores, axis=1)
print(medians)

print('Перераспределить студентов из `scores` в 10 групп по 15 человек с помощью метода `reshape`. Посчитать среднюю оценку в группе на обновленных данных.')
reshaped_scores = np.reshape(scores, (10, 15))
print(reshaped_scores)

print('Определить общее число элементов в массиве `advanced`.')
count_advanced = np.count_nonzero(advanced)
print(count_advanced)

print('На основе исходного массива `scores` создать булев массив `sto`, где `True` соответствует баллам за экзамен, равным 100, а `False` – всем остальным баллам.')
sto = scores == 100
print(sto)

print('12. На основе исходного массива `scores` вывести на экран оценки слушателей первых семи групп (включительно, должны быть 7 списков оценок).')
first = scores[:7]
print(first)
